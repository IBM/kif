# -*- mode: makefile -*-

NAME= kif-lib
PACKAGE= kif_lib
DESCRIPTION= A knowledge integration framework based on Wikidata
AUTHOR= IBM
EMAIL= Guilherme.Lima@ibm.com
URL= https://github.com/IBM/kif
URL_SSH= git@github.com:IBM/kif.git

COPYRIGHT= IBM Corp.
COPYRIGHT_START_YEAR= 2023
LICENSE= Apache-2.0

SETUP_PY_PACKAGE_DATA= {\
    '${PACKAGE}': ['py.typed'],\
    '${PACKAGE}.vocabulary': ['wikidata_properties.json'],\
  }

SETUP_PY_INSTALL_REQUIRES= [\
    'httpx',\
    'lark',\
    'more_itertools',\
    'rdflib',\
    'typing-extensions',\
  ]

SETUP_PY_EXTRAS_REQUIRE_DOCS= [\
    'myst_parser',\
    'pydata_sphinx_theme',\
  ]

CHECK_PYLINT= no
CHECKFAST= ${TOX_SETENV}
COVERAGERC_EXCLUDE_LINES+= <line>raise \w+\._must_be_implemented_in_subclass</line>
COVERAGERC_EXCLUDE_LINES+= <line>raise \w+\._should_not_get_here</line>
COVERAGERC_EXCLUDE_LINES+= <line>raise MustBeImplementedInSubclass</line>
COVERAGERC_EXCLUDE_LINES+= <line>raise ShouldNotGetHere</line>
MYPY_OPTIONS=
PYLINT_OPERANDS= ${PACKAGE}
PYLINTRC_DISABLE+= <line>abstract-method,</line>
PYLINTRC_DISABLE+= <line>arguments-differ,</line>
PYLINTRC_DISABLE+= <line>arguments-out-of-order,</line>
PYLINTRC_DISABLE+= <line>consider-using-in,</line>
PYLINTRC_DISABLE+= <line>import-outside-toplevel,</line>
PYLINTRC_DISABLE+= <line>invalid-name,</line>
PYLINTRC_DISABLE+= <line>missing-function-docstring,</line>
PYLINTRC_DISABLE+= <line>missing-module-docstring,</line>
PYLINTRC_DISABLE+= <line>no-else-return,</line>
PYLINTRC_DISABLE+= <line>no-member,</line>
PYLINTRC_DISABLE+= <line>no-name-in-module,</line>
PYLINTRC_DISABLE+= <line>protected-access,</line>
PYLINTRC_DISABLE+= <line>redefined-builtin,</line>
PYLINTRC_DISABLE+= <line>superfluous-parens,</line>
PYLINTRC_DISABLE+= <line>too-few-public-methods,</line>
PYLINTRC_DISABLE+= <line>too-many-ancestors,</line>
PYLINTRC_DISABLE+= <line>too-many-arguments,</line>
PYLINTRC_DISABLE+= <line>too-many-boolean-expressions,</line>
PYLINTRC_DISABLE+= <line>too-many-branches,</line>
PYLINTRC_DISABLE+= <line>too-many-instance-attributes,</line>
PYLINTRC_DISABLE+= <line>too-many-lines,</line>
PYLINTRC_DISABLE+= <line>too-many-locals,</line>
PYLINTRC_DISABLE+= <line>too-many-nested-blocks,</line>
PYLINTRC_DISABLE+= <line>too-many-public-methods,</line>
PYLINTRC_DISABLE+= <line>too-many-return-statements,</line>
PYLINTRC_DISABLE+= <line>too-many-statements,</line>
PYLINTRC_DISABLE+= <line>unidiomatic-typecheck,</line>
PYLINTRC_DISABLE+= <line>unnecessary-lambda-assignment,</line>
PYLINTRC_DISABLE+= <line>unsupported-binary-operation,</line>
PYLINTRC_DISABLE+= <line>unused-argument,</line>
PYRIGHTCONFIG_EXCLUDE= ["tests/model/test_object.py"]
PYTEST_OPTIONS+= --ignore tests/__init__.py
PYTEST_OPTIONS+= --ignore tests/data/__init__.py
PYTEST_OPTIONS+= --ignore tests/model/test_object.py
PYTEST_OPTIONS+= --ignore tests/tests.py
TOX_INI_PASSENV+= <line>PUBCHEM</line>
TOX_INI_PASSENV+= <line>WIKIDATA</line>
TOX_SETENV= PUBCHEM='' WIKIDATA=''

GEN_ALL_TARGETS+= gen-kif-object-pyi

# generate kif_lib/model/kif_object.pyi
.PHONY: gen-kif-object-pyi
gen-kif-object-pyi:
	$P 'generating kif_lib/model/kif_object.pyi'
	@PYTHONPATH=. ${PYTHON} build-aux/gen_kif_object_pyi.py

# Set WIKIDATA and PUBCHEM in your local Makefile.
-include Makefile_local.conf
PYTEST_ENV+= PUBCHEM='${PUBCHEM}'
PYTEST_ENV+= WIKIDATA='${WIKIDATA}'

TESTS_CACHE= tests/test_cache.py
.PHONY: check-cache
check-cache:
	${MAKE} check TESTS='${TESTS_CACHE}'

TESTS_MODEL_VALUE=\
  ${TESTS_MODEL_VALUE_ENTITY}\
  ${TESTS_MODEL_VALUE_SHALLOW_DATA_VALUE}\
  ${NULL}
.PHONY: check-model-value
check-model-value:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE}'

TESTS_MODEL_VALUE_ENTITY=\
  ${TESTS_MODEL_VALUE_ITEM}\
  ${TESTS_MODEL_VALUE_LEXEME}\
  ${NULL}

TESTS_MODEL_VALUE_ITEM=\
  tests/model/value/test_item.py\
  tests/model/value/test_item_datatype.py\
  tests/model/value/test_item_template.py\
  tests/model/value/test_item_variable.py\
  ${NULL}
.PHONY: check-model-value-item
check-model-value-item:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_ITEM}'

TESTS_MODEL_VALUE_LEXEME=\
  tests/model/value/test_lexeme.py\
  tests/model/value/test_lexeme_datatype.py\
  tests/model/value/test_lexeme_template.py\
  tests/model/value/test_lexeme_variable.py\
  ${NULL}
.PHONY: check-model-value-lexeme
check-model-value-lexeme:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_LEXEME}'

TESTS_MODEL_VALUE_SHALLOW_DATA_VALUE=\
  tests/model/value/test_shallow_data_value.py\
  tests/model/value/test_shallow_data_value_template.py\
  tests/model/value/test_shallow_data_value_variable.py\
  ${TESTS_MODEL_VALUE_IRI}\
  ${TESTS_MODEL_VALUE_TEXT}\
  ${TESTS_MODEL_VALUE_STRING}\
  ${TESTS_MODEL_VALUE_EXTERNAL_ID}\
  ${NULL}
.PHONY: check-model-value-shallow-data-value
check-model-value-shallow-data-value:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_SHALLOW_DATA_VALUE}'

TESTS_MODEL_VALUE_IRI=\
  tests/model/value/test_iri.py\
  tests/model/value/test_iri_datatype.py\
  tests/model/value/test_iri_template.py\
  tests/model/value/test_iri_variable.py\
  ${NULL}
.PHONY: check-model-value-iri
check-model-value-iri:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_IRI}'

TESTS_MODEL_VALUE_TEXT=\
  tests/model/value/test_text.py\
  tests/model/value/test_text_datatype.py\
  tests/model/value/test_text_template.py\
  tests/model/value/test_text_variable.py\
  ${NULL}
.PHONY: check-model-value-text
check-model-value-text:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_TEXT}'

TESTS_MODEL_VALUE_STRING=\
  tests/model/value/test_string.py\
  tests/model/value/test_string_datatype.py\
  tests/model/value/test_string_template.py\
  tests/model/value/test_string_variable.py\
  ${NULL}
.PHONY: check-model-value-string
check-model-value-string:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_STRING}'

TESTS_MODEL_VALUE_EXTERNAL_ID=\
  tests/model/value/test_external_id.py\
  tests/model/value/test_external_id_datatype.py\
  tests/model/value/test_external_id_template.py\
  tests/model/value/test_external_id_variable.py\
  ${NULL}
.PHONY: check-model-value-external-id
check-model-value-external-id:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_EXTERNAL_ID}'

### LEGACY #################################################################

TESTS_MODEL_DESCRIPTOR:= $(wildcard tests/test_model_descriptor_*.py)
TESTS_MODEL_KIF_OBJECT:= tests/model/test_kif_object.py
TESTS_MODEL_OBJECT:= tests/model/test_object.py
TESTS_MODEL_SET:= $(wildcard tests/test_model_*_set.py)
TESTS_MODEL_SNAK:=\
  $(filter-out ${TESTS_MODEL_SET}, $(wildcard tests/test_model_snak_*.py))
TESTS_MODEL_TEMPLATE:= tests/model/test_template.py
TESTS_MODEL_VARIABLE:= tests/model/test_variable.py
TESTS_STORE_ABC:= $(wildcard tests/test_store_abc*.py)
TESTS_STORE_EMPTY:= $(wildcard tests/test_store_empty*.py)
TESTS_STORE_MAPPER:= $(wildcard tests/test_store_mapper*.py)
TESTS_STORE_MIXER:= $(wildcard tests/test_store_mixer*.py)
TESTS_STORE_RDF:= $(wildcard tests/test_store_rdf*.py)
TESTS_STORE_SPARQL:= $(wildcard tests/test_store_sparql*.py)

.PHONY: check-model-descriptor
check-model-descriptor:
	${MAKE} check TESTS='${TESTS_MODEL_DESCRIPTOR}'

.PHONY: check-model-kif-object
check-model-kif-object:
	${MAKE} check TESTS='${TESTS_MODEL_KIF_OBJECT}'

.PHONY: check-model-object
check-model-object:
	${MAKE} check TESTS='${TESTS_MODEL_OBJECT}'

.PHONY: check-model-set
check-model-set:
	${MAKE} check TESTS='${TESTS_MODEL_SET}'

.PHONY: check-model-snak
check-model-snak:
	${MAKE} check TESTS='${TESTS_MODEL_SNAK}'

.PHONY: check-model-template
check-model-template:
	${MAKE} check TESTS='${TESTS_MODEL_TEMPLATE}'

.PHONY: check-model-variable
check-model-variable:
	${MAKE} check TESTS='${TESTS_MODEL_VARIABLE}'

.PHONY: check-store-abc
check-store-abc:
	${MAKE} check TESTS='${TESTS_STORE_ABC}'

.PHONY: check-store-empty
check-store-empty:
	${MAKE} check TESTS='${TESTS_STORE_EMPTY}'

.PHONY: check-store-mapper
check-store-mapper:
	${MAKE} check TESTS='${TESTS_STORE_MAPPER}'

.PHONY: check-store-mixer
check-store-mixer:
	${MAKE} check TESTS='${TESTS_STORE_MIXER}'

.PHONY: check-store-rdf
check-store-rdf:
	${MAKE} check TESTS='${TESTS_STORE_RDF}'

.PHONY: check-store-sparql
check-store-sparql:
	${MAKE} check TESTS='${TESTS_STORE_SPARQL}'
