# -*- mode: makefile -*-

NAME= kif-lib
PACKAGE= kif_lib
DESCRIPTION= A knowledge integration framework based on Wikidata
AUTHOR= IBM
EMAIL= Guilherme.Lima@ibm.com
URL= https://github.com/IBM/kif
URL_SSH= git@github.com:IBM/kif.git

COPYRIGHT= IBM Corp.
COPYRIGHT_START_YEAR= 2023
LICENSE= Apache-2.0

SETUP_PY_PACKAGE_DATA= {\
    '${PACKAGE}': ['py.typed'],\
    '${PACKAGE}.vocabulary': ['wikidata_properties.json'],\
  }

SETUP_PY_INSTALL_REQUIRES= [\
    'httpx',\
    'lark',\
    'more_itertools',\
    'rdflib',\
    'typing-extensions',\
  ]

SETUP_PY_EXTRAS_REQUIRE_DOCS= [\
    'myst_parser',\
    'pydata_sphinx_theme',\
  ]

CHECKFAST= ${TOX_SETENV}
COVERAGERC_EXCLUDE_LINES+= <line>raise \w+\._must_be_implemented_in_subclass</line>
COVERAGERC_EXCLUDE_LINES+= <line>raise \w+\._should_not_get_here</line>
COVERAGERC_EXCLUDE_LINES+= <line>raise MustBeImplementedInSubclass</line>
COVERAGERC_EXCLUDE_LINES+= <line>raise ShouldNotGetHere</line>
COVERAGERC_OMIT=
MYPY_OPTIONS=
PYTEST_OPTIONS+= --ignore tests/__init__.py
PYTEST_OPTIONS+= --ignore tests/data/__init__.py
PYTEST_OPTIONS+= --ignore tests/model/test_object.py
PYTEST_OPTIONS+= --ignore tests/tests.py
TOX_SETENV= PUBCHEM='' WIKIDATA=''
TOX_PASSENV+= <line>PUBCHEM</line>
TOX_PASSENV+= <line>WIKIDATA</line>

GEN_ALL_TARGETS+= gen-kif-object-pyi

# generate kif_lib/model/kif_object.pyi
.PHONY: gen-kif-object-pyi
gen-kif-object-pyi:
	$P 'generating kif_lib/model/kif_object.pyi'
	@PYTHONPATH=. ${PYTHON} build-aux/gen_kif_object_pyi.py

# Set WIKIDATA and PUBCHEM in your local Makefile.
-include Makefile_local.conf
PYTEST_ENV+= PUBCHEM='${PUBCHEM}'
PYTEST_ENV+= WIKIDATA='${WIKIDATA}'

TESTS_CACHE:= $(wildcard tests/test_cache*.py)
TESTS_MODEL_DESCRIPTOR:= $(wildcard tests/test_model_descriptor_*.py)
TESTS_MODEL_KIF_OBJECT:= tests/model/test_kif_object.py
TESTS_MODEL_OBJECT:= tests/model/test_object.py
TESTS_MODEL_SET:= $(wildcard tests/test_model_*_set.py)
TESTS_MODEL_SNAK:=\
  $(filter-out ${TESTS_MODEL_SET}, $(wildcard tests/test_model_snak_*.py))
TESTS_MODEL_TEMPLATE:= tests/model/test_template.py
TESTS_MODEL_VALUE:=\
  $(filter-out ${TESTS_MODEL_SET}, $(wildcard tests/test_model_value_*.py))
TESTS_MODEL_VARIABLE:= tests/model/test_variable.py
TESTS_STORE_ABC:= $(wildcard tests/test_store_abc*.py)
TESTS_STORE_EMPTY:= $(wildcard tests/test_store_empty*.py)
TESTS_STORE_MAPPER:= $(wildcard tests/test_store_mapper*.py)
TESTS_STORE_MIXER:= $(wildcard tests/test_store_mixer*.py)
TESTS_STORE_RDF:= $(wildcard tests/test_store_rdf*.py)
TESTS_STORE_SPARQL:= $(wildcard tests/test_store_sparql*.py)

.PHONY: check-cache
check-cache:
	${MAKE} check TESTS='${TESTS_CACHE}'

.PHONY: check-model-descriptor
check-model-descriptor:
	${MAKE} check TESTS='${TESTS_MODEL_DESCRIPTOR}'

.PHONY: check-model-kif-object
check-model-kif-object:
	${MAKE} check TESTS='${TESTS_MODEL_KIF_OBJECT}'

.PHONY: check-model-object
check-model-object:
	${MAKE} check TESTS='${TESTS_MODEL_OBJECT}'

.PHONY: check-model-set
check-model-set:
	${MAKE} check TESTS='${TESTS_MODEL_SET}'

.PHONY: check-model-snak
check-model-snak:
	${MAKE} check TESTS='${TESTS_MODEL_SNAK}'

.PHONY: check-model-template
check-model-template:
	${MAKE} check TESTS='${TESTS_MODEL_TEMPLATE}'

.PHONY: check-model-value
check-model-value:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE}'

.PHONY: check-model-variable
check-model-variable:
	${MAKE} check TESTS='${TESTS_MODEL_VARIABLE}'

.PHONY: check-store-abc
check-store-abc:
	${MAKE} check TESTS='${TESTS_STORE_ABC}'

.PHONY: check-store-empty
check-store-empty:
	${MAKE} check TESTS='${TESTS_STORE_EMPTY}'

.PHONY: check-store-mapper
check-store-mapper:
	${MAKE} check TESTS='${TESTS_STORE_MAPPER}'

.PHONY: check-store-mixer
check-store-mixer:
	${MAKE} check TESTS='${TESTS_STORE_MIXER}'

.PHONY: check-store-rdf
check-store-rdf:
	${MAKE} check TESTS='${TESTS_STORE_RDF}'

.PHONY: check-store-sparql
check-store-sparql:
	${MAKE} check TESTS='${TESTS_STORE_SPARQL}'
