# -*- mode: makefile -*-

NAME= kif-lib
PACKAGE= kif_lib
VERSION= $(shell ${PYTHON} -c 'import kif_lib; print(kif_lib.__version__)')
DESCRIPTION= A knowledge integration framework based on Wikidata
AUTHOR= IBM
EMAIL= Guilherme.Lima@ibm.com
URL= https://github.com/IBM/kif
URL_SSH= git@github.com:IBM/kif.git

COPYRIGHT= IBM Corp.
COPYRIGHT_START_YEAR= 2023
LICENSE= Apache-2.0

SETUP_PY_PACKAGE_DATA= {\
    '${PACKAGE}': ['py.typed'],\
    '${PACKAGE}.vocabulary.wd': ['wikidata_properties.tsv'],\
  }

SETUP_PY_INSTALL_REQUIRES= [\
    'httpx',\
    'lark',\
    'more_itertools',\
    'networkx',\
    'rdflib',\
    'types-networkx',\
    'typing-extensions',\
  ]

SETUP_PY_EXTRAS_REQUIRE_DOCS= [\
    'myst_nb',\
    'sphinx-rtd-theme',\
  ]

CHECK_PYLINT= no
CHECKFAST= ${TOX_SETENV}
COVERAGERC_EXCLUDE_LINES+= <line>raise \w+\._must_be_implemented_in_subclass</line>
COVERAGERC_EXCLUDE_LINES+= <line>raise \w+\._should_not_get_here</line>
COVERAGERC_EXCLUDE_LINES+= <line>raise MustBeImplementedInSubclass</line>
COVERAGERC_EXCLUDE_LINES+= <line>raise ShouldNotGetHere</line>
ISORT_CFG_ADD_IMPORTS= from __future__ import annotations
MYPY_OPTIONS=
PYLINT_OPERANDS= ${PACKAGE}
PYLINTRC_DISABLE+= <line>abstract-method,</line>
PYLINTRC_DISABLE+= <line>arguments-differ,</line>
PYLINTRC_DISABLE+= <line>arguments-out-of-order,</line>
PYLINTRC_DISABLE+= <line>bad-mcs-classmethod-argument,</line>
PYLINTRC_DISABLE+= <line>consider-using-in,</line>
PYLINTRC_DISABLE+= <line>cyclic-import,</line>
PYLINTRC_DISABLE+= <line>duplicate-code,</line>
PYLINTRC_DISABLE+= <line>import-outside-toplevel,</line>
PYLINTRC_DISABLE+= <line>invalid-name,</line>
PYLINTRC_DISABLE+= <line>missing-function-docstring,</line>
PYLINTRC_DISABLE+= <line>missing-module-docstring,</line>
PYLINTRC_DISABLE+= <line>no-else-continue,</line>
PYLINTRC_DISABLE+= <line>no-else-raise,</line>
PYLINTRC_DISABLE+= <line>no-else-return,</line>
PYLINTRC_DISABLE+= <line>no-member,</line>
PYLINTRC_DISABLE+= <line>no-name-in-module,</line>
PYLINTRC_DISABLE+= <line>protected-access,</line>
PYLINTRC_DISABLE+= <line>redefined-builtin,</line>
PYLINTRC_DISABLE+= <line>superfluous-parens,</line>
PYLINTRC_DISABLE+= <line>too-few-public-methods,</line>
PYLINTRC_DISABLE+= <line>too-many-ancestors,</line>
PYLINTRC_DISABLE+= <line>too-many-arguments,</line>
PYLINTRC_DISABLE+= <line>too-many-boolean-expressions,</line>
PYLINTRC_DISABLE+= <line>too-many-branches,</line>
PYLINTRC_DISABLE+= <line>too-many-instance-attributes,</line>
PYLINTRC_DISABLE+= <line>too-many-lines,</line>
PYLINTRC_DISABLE+= <line>too-many-locals,</line>
PYLINTRC_DISABLE+= <line>too-many-nested-blocks,</line>
PYLINTRC_DISABLE+= <line>too-many-public-methods,</line>
PYLINTRC_DISABLE+= <line>too-many-return-statements,</line>
PYLINTRC_DISABLE+= <line>too-many-statements,</line>
PYLINTRC_DISABLE+= <line>unidiomatic-typecheck,</line>
PYLINTRC_DISABLE+= <line>unnecessary-lambda-assignment,</line>
PYLINTRC_DISABLE+= <line>unsupported-binary-operation,</line>
PYLINTRC_DISABLE+= <line>unused-argument,</line>
PYLINTRC_DISABLE+= <line>unused-import,</line>
PYRIGHTCONFIG_EXCLUDE= ["tests/model/test_object.py"]
PYTEST_OPTIONS+= --ignore tests/model/test_object.py --ignore tests/tests
TOX_INI_PASSENV+= <line>PUBCHEM</line>
TOX_INI_PASSENV+= <line>WIKIDATA</line>
TOX_SETENV= PUBCHEM='' WIKIDATA=''

# Set WIKIDATA and PUBCHEM in your local Makefile.
-include Makefile_local.conf
PYTEST_ENV+= PUBCHEM='${PUBCHEM}'
PYTEST_ENV+= WIKIDATA='${WIKIDATA}'

TESTS_CACHE= tests/test_cache.py
.PHONY: check-cache
check-cache:
	${MAKE} check TESTS='${TESTS_CACHE}'

TESTS_CONTEXT=\
  tests/context/test_context.py\
  tests/context/test_options.py\
  tests/context/test_section.py\
  ${NULL}
.PHONY: check-context
check-context:
	${MAKE} check TESTS='${TESTS_CONTEXT}'

TESTS_MODEL=\
  tests/model/test_options.py\
  ${TESTS_MODEL_KIF_OBJECT}\
  ${TESTS_MODEL_TERM}\
  ${TESTS_MODEL_VALUE}\
  ${TESTS_MODEL_SNAK}\
  ${TESTS_MODEL_STATEMENT}\
  ${TESTS_MODEL_ANNOTATION}\
  ${TESTS_MODEL_DESCRIPTOR}\
  ${TESTS_MODEL_SET}\
  ${NULL}
.PHONY: check-model
check-model:
	${MAKE} check TESTS='${TESTS_MODEL}'

TESTS_MODEL_OBJECT=\
  tests/model/test_object.py\
  ${NULL}
.PHONY: check-model-object
check-model-object:
	${MAKE} check TESTS='${TESTS_MODEL_OBJECT}'

TESTS_MODEL_KIF_OBJECT=\
  tests/model/test_kif_object.py\
  ${NULL}
.PHONY: check-model-kif-object
check-model-kif-object:
	${MAKE} check TESTS='${TESTS_MODEL_KIF_OBJECT}'

TESTS_MODEL_TERM=\
  tests/model/term/test_closed_term.py\
  tests/model/term/test_open_term.py\
  tests/model/term/test_template.py\
  tests/model/term/test_term.py\
  tests/model/term/test_variable.py\
  ${NULL}
.PHONY: check-model-term
check-model-term:
	${MAKE} check TESTS='${TESTS_MODEL_TERM}'

TESTS_MODEL_VALUE=\
  tests/model/value/test_options.py\
  ${TESTS_MODEL_VALUE_DATATYPE}\
  ${TESTS_MODEL_VALUE_VALUE}\
  ${TESTS_MODEL_VALUE_ENTITY}\
  ${TESTS_MODEL_VALUE_DATA_VALUE}\
  ${NULL}
.PHONY: check-model-value
check-model-value:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE}'

TESTS_MODEL_VALUE_DATATYPE=\
  tests/model/value/test_datatype.py\
  tests/model/value/test_datatype_variable.py\
  ${NULL}
.PHONY: check-model-value-datatype
check-model-value-datatype:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_DATATYPE}'

TESTS_MODEL_VALUE_VALUE=\
  tests/model/value/test_value.py\
  tests/model/value/test_value_template.py\
  tests/model/value/test_value_variable.py\
  ${NULL}
.PHONY: check-model-value-value
check-model-value-value:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_VALUE}'

TESTS_MODEL_VALUE_ENTITY=\
  tests/model/value/test_entity.py\
  tests/model/value/test_entity_template.py\
  tests/model/value/test_entity_variable.py\
  ${TESTS_MODEL_VALUE_ITEM}\
  ${TESTS_MODEL_VALUE_PROPERTY}\
  ${TESTS_MODEL_VALUE_LEXEME}\
  ${NULL}
.PHONY: check-model-value-entity
check-model-value-entity:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_ENTITY}'

TESTS_MODEL_VALUE_ITEM=\
  tests/model/value/test_item.py\
  tests/model/value/test_item_datatype.py\
  tests/model/value/test_item_template.py\
  tests/model/value/test_item_variable.py\
  ${NULL}
.PHONY: check-model-value-item
check-model-value-item:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_ITEM}'

TESTS_MODEL_VALUE_PROPERTY=\
  tests/model/value/test_property.py\
  tests/model/value/test_property_datatype.py\
  tests/model/value/test_property_template.py\
  tests/model/value/test_property_variable.py\
  ${NULL}
.PHONY: check-model-value-property
check-model-value-property:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_PROPERTY}'

TESTS_MODEL_VALUE_LEXEME=\
  tests/model/value/test_lexeme.py\
  tests/model/value/test_lexeme_datatype.py\
  tests/model/value/test_lexeme_template.py\
  tests/model/value/test_lexeme_variable.py\
  ${NULL}
.PHONY: check-model-value-lexeme
check-model-value-lexeme:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_LEXEME}'

TESTS_MODEL_VALUE_DATA_VALUE=\
  ${TESTS_MODEL_VALUE_SHALLOW_DATA_VALUE}\
  ${TESTS_MODEL_VALUE_DEEP_DATA_VALUE}\
  ${NULL}
.PHONY: check-model-value-data-value
check-model-value-data-value:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_DATA_VALUE}'

TESTS_MODEL_VALUE_SHALLOW_DATA_VALUE=\
  tests/model/value/test_shallow_data_value.py\
  tests/model/value/test_shallow_data_value_template.py\
  tests/model/value/test_shallow_data_value_variable.py\
  ${TESTS_MODEL_VALUE_IRI}\
  ${TESTS_MODEL_VALUE_TEXT}\
  ${TESTS_MODEL_VALUE_STRING}\
  ${TESTS_MODEL_VALUE_EXTERNAL_ID}\
  ${NULL}
.PHONY: check-model-value-shallow-data-value
check-model-value-shallow-data-value:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_SHALLOW_DATA_VALUE}'

TESTS_MODEL_VALUE_IRI=\
  tests/model/value/test_iri.py\
  tests/model/value/test_iri_datatype.py\
  tests/model/value/test_iri_template.py\
  tests/model/value/test_iri_variable.py\
  ${NULL}
.PHONY: check-model-value-iri
check-model-value-iri:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_IRI}'

TESTS_MODEL_VALUE_TEXT=\
  tests/model/value/test_text.py\
  tests/model/value/test_text_datatype.py\
  tests/model/value/test_text_options.py\
  tests/model/value/test_text_template.py\
  tests/model/value/test_text_variable.py\
  ${NULL}
.PHONY: check-model-value-text
check-model-value-text:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_TEXT}'

TESTS_MODEL_VALUE_STRING=\
  tests/model/value/test_string.py\
  tests/model/value/test_string_datatype.py\
  tests/model/value/test_string_template.py\
  tests/model/value/test_string_variable.py\
  ${NULL}
.PHONY: check-model-value-string
check-model-value-string:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_STRING}'

TESTS_MODEL_VALUE_EXTERNAL_ID=\
  tests/model/value/test_external_id.py\
  tests/model/value/test_external_id_datatype.py\
  tests/model/value/test_external_id_template.py\
  tests/model/value/test_external_id_variable.py\
  ${NULL}
.PHONY: check-model-value-external-id
check-model-value-external-id:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_EXTERNAL_ID}'

TESTS_MODEL_VALUE_DEEP_DATA_VALUE=\
  tests/model/value/test_deep_data_value.py\
  tests/model/value/test_deep_data_value_template.py\
  tests/model/value/test_deep_data_value_variable.py\
  ${TESTS_MODEL_VALUE_QUANTITY}\
  ${TESTS_MODEL_VALUE_TIME}\
  ${NULL}
.PHONY: check-model-value-deep-data-value
check-model-value-deep-data-value:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_DEEP_DATA_VALUE}'

TESTS_MODEL_VALUE_QUANTITY=\
  tests/model/value/test_quantity.py\
  tests/model/value/test_quantity_datatype.py\
  tests/model/value/test_quantity_template.py\
  tests/model/value/test_quantity_variable.py\
  ${NULL}
.PHONY: check-model-value-quantity
check-model-value-quantity:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_QUANTITY}'

TESTS_MODEL_VALUE_TIME=\
  tests/model/value/test_time.py\
  tests/model/value/test_time_datatype.py\
  tests/model/value/test_time_template.py\
  tests/model/value/test_time_variable.py\
  ${NULL}
.PHONY: check-model-value-time
check-model-value-time:
	${MAKE} check TESTS='${TESTS_MODEL_VALUE_TIME}'

TESTS_MODEL_SNAK=\
  ${TESTS_MODEL_SNAK_SNAK}\
  ${TESTS_MODEL_SNAK_VALUE_SNAK}\
  ${TESTS_MODEL_SNAK_SOME_VALUE_SNAK}\
  ${TESTS_MODEL_SNAK_NO_VALUE_SNAK}\
  ${NULL}
.PHONY: check-model-snak
check-model-snak:
	${MAKE} check TESTS='${TESTS_MODEL_SNAK}'

TESTS_MODEL_SNAK_SNAK=\
  tests/model/snak/test_snak.py\
  tests/model/snak/test_snak_template.py\
  tests/model/snak/test_snak_variable.py\
  ${NULL}
.PHONY: check-model-snak-snak
check-model-snak-snak:
	${MAKE} check TESTS='${TESTS_MODEL_SNAK_SNAK}'

TESTS_MODEL_SNAK_VALUE_SNAK=\
  tests/model/snak/test_value_snak.py\
  tests/model/snak/test_value_snak_template.py\
  tests/model/snak/test_value_snak_variable.py\
  ${NULL}
.PHONY: check-model-snak-value-snak
check-model-snak-value-snak:
	${MAKE} check TESTS='${TESTS_MODEL_SNAK_VALUE_SNAK}'

TESTS_MODEL_SNAK_SOME_VALUE_SNAK=\
  tests/model/snak/test_some_value_snak.py\
  tests/model/snak/test_some_value_snak_template.py\
  tests/model/snak/test_some_value_snak_variable.py\
  ${NULL}
.PHONY: check-model-snak-some-value-snak
check-model-snak-some-value-snak:
	${MAKE} check TESTS='${TESTS_MODEL_SNAK_SOME_VALUE_SNAK}'

TESTS_MODEL_SNAK_NO_VALUE_SNAK=\
  tests/model/snak/test_no_value_snak.py\
  tests/model/snak/test_no_value_snak_template.py\
  tests/model/snak/test_no_value_snak_variable.py\
  ${NULL}
.PHONY: check-model-snak-no-value-snak
check-model-snak-no-value-snak:
	${MAKE} check TESTS='${TESTS_MODEL_SNAK_NO_VALUE_SNAK}'

TESTS_MODEL_STATEMENT=\
  tests/model/statement/test_statement.py\
  tests/model/statement/test_statement_template.py\
  tests/model/statement/test_statement_variable.py\
  ${NULL}
.PHONY: check-model-statement
check-model-statement:
	${MAKE} check TESTS='${TESTS_MODEL_STATEMENT}'

TESTS_MODEL_ANNOTATION=\
  ${TESTS_MODEL_ANNOTATION_ANNOTATION_RECORD}\
  ${TESTS_MODEL_ANNOTATION_RANK}\
  ${NULL}
.PHONY: check-model-annotation
check-model-annotation:
	${MAKE} check TESTS='${TESTS_MODEL_ANNOTATION}'

TESTS_MODEL_ANNOTATION_ANNOTATION_RECORD=\
  tests/model/annotation/test_annotation_record.py\
  ${NULL}
.PHONY: check-model-annotation-annotation-record.py
check-model-annotation-annotation-record:
	${MAKE} check TESTS='${TESTS_MODEL_ANNOTATION_ANNOTATION_RECORD}'

TESTS_MODEL_ANNOTATION_RANK=\
  tests/model/annotation/rank/test_rank.py\
  tests/model/annotation/rank/test_deprecated_rank.py\
  tests/model/annotation/rank/test_normal_rank.py\
  tests/model/annotation/rank/test_preferred_rank.py\
  ${NULL}
.PHONY: check-model-annotation-rank
check-model-annotation-rank:
	${MAKE} check TESTS='${TESTS_MODEL_ANNOTATION_RANK}'

TESTS_MODEL_DESCRIPTOR=\
  tests/model/descriptor/test_descriptor.py\
  tests/model/descriptor/test_plain_descriptor.py\
  tests/model/descriptor/test_property_descriptor.py\
  tests/model/descriptor/test_item_descriptor.py\
  tests/model/descriptor/test_lexeme_descriptor.py\
  ${NULL}
.PHONY: check-model-descriptor
check-model-descriptor:
	${MAKE} check TESTS='${TESTS_MODEL_DESCRIPTOR}'

TESTS_MODEL_SET=\
  tests/model/set/test_annotation_record_set.py\
  tests/model/set/test_reference_record.py\
  tests/model/set/test_reference_record_set.py\
  tests/model/set/test_snak_set.py\
  tests/model/set/test_text_set.py\
  tests/model/set/test_value_set.py\
  ${NULL}
.PHONY: check-model-set
check-model-set:
	${MAKE} check TESTS='${TESTS_MODEL_SET}'

TESTS_MODEL_FINGERPRINT=\
  tests/model/fingerprint/test_and_fingerprint.py\
  tests/model/fingerprint/test_atomic_fingerprint.py\
  tests/model/fingerprint/test_compound_fingerprint.py\
  tests/model/fingerprint/test_converse_snak_fingerprint.py\
  tests/model/fingerprint/test_empty_fingerprint.py\
  tests/model/fingerprint/test_fingerprint.py\
  tests/model/fingerprint/test_full_fingerprint.py\
  tests/model/fingerprint/test_or_fingerprint.py\
  tests/model/fingerprint/test_snak_fingerprint.py\
  tests/model/fingerprint/test_value_fingerprint.py\
  ${NULL}
check-model-fingerprint:
	${MAKE} check TESTS='${TESTS_MODEL_FINGERPRINT}'

TESTS_MODEL_FILTER=\
  tests/model/filter/test_filter.py\
  tests/model/filter/test_filter_datatype_mask.py\
  tests/model/filter/test_filter_snak_mask.py\
  ${NULL}
.PHONY: check-model-filter
check-model-filter:
	${MAKE} check TESTS='${TESTS_MODEL_FILTER}'

TESTS_STORE=\
  tests/store/test_options.py\
  ${NULL}
.PHONY: check-store
check-store:
	${MAKE} check TESTS='${TESTS_STORE}'
